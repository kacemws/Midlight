[{"C:\\DevMobile\\Neo\\midight\\src\\index.tsx":"1","C:\\DevMobile\\Neo\\midight\\src\\reportWebVitals.ts":"2","C:\\DevMobile\\Neo\\midight\\src\\App.tsx":"3","C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\index.ts":"4","C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\Button.tsx":"5","C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\index.ts":"6","C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\Text.tsx":"7","C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\index.ts":"8","C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\Toast.tsx":"9","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\index.ts":"10","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Modal.tsx":"11","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Subcomponents\\index.ts":"12","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Subcomponents\\Section.tsx":"13","C:\\DevMobile\\Neo\\midight\\src\\stories\\0-Introduction.stories.tsx":"14","C:\\DevMobile\\Neo\\midight\\src\\stories\\Introduction.tsx":"15","C:\\DevMobile\\Neo\\midight\\src\\stories\\1-Button.stories.tsx":"16","C:\\DevMobile\\Neo\\midight\\src\\stories\\2-modal.stories.tsx":"17","C:\\DevMobile\\Neo\\midight\\src\\stories\\3-Toast.stories.tsx":"18","C:\\DevMobile\\Neo\\midight\\src\\stories\\4-Badge.stories.tsx":"19","C:\\DevMobile\\Neo\\midight\\src\\Components\\Badge\\index.ts":"20","C:\\DevMobile\\Neo\\midight\\src\\Components\\Badge\\Badge.tsx":"21"},{"size":509,"mtime":1610915833684,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1610904671475,"results":"24","hashOfConfig":"23"},{"size":655,"mtime":1614527807561,"results":"25","hashOfConfig":"23"},{"size":27,"mtime":1610910903921,"results":"26","hashOfConfig":"23"},{"size":539,"mtime":1613245863858,"results":"27","hashOfConfig":"23"},{"size":25,"mtime":1610956939920,"results":"28","hashOfConfig":"23"},{"size":914,"mtime":1610957557052,"results":"29","hashOfConfig":"23"},{"size":26,"mtime":1613247421356,"results":"30","hashOfConfig":"23"},{"size":1845,"mtime":1614023986370,"results":"31","hashOfConfig":"23"},{"size":26,"mtime":1613425240132,"results":"32","hashOfConfig":"23"},{"size":1979,"mtime":1614020001895,"results":"33","hashOfConfig":"23"},{"size":28,"mtime":1613510246117,"results":"34","hashOfConfig":"23"},{"size":391,"mtime":1613598317736,"results":"35","hashOfConfig":"23"},{"size":272,"mtime":1614017933856,"results":"36","hashOfConfig":"23"},{"size":358,"mtime":1613857739362,"results":"37","hashOfConfig":"23"},{"size":3130,"mtime":1614019034342,"results":"38","hashOfConfig":"23"},{"size":5634,"mtime":1614020519672,"results":"39","hashOfConfig":"23"},{"size":3059,"mtime":1614025736459,"results":"40","hashOfConfig":"23"},{"size":4759,"mtime":1614528899024,"results":"41","hashOfConfig":"23"},{"size":26,"mtime":1614027410468,"results":"42","hashOfConfig":"23"},{"size":634,"mtime":1614116081991,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1nygelh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},"C:\\DevMobile\\Neo\\midight\\src\\index.tsx",[],["95","96"],"C:\\DevMobile\\Neo\\midight\\src\\reportWebVitals.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\App.tsx",["97","98","99","100","101"],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\index.ts",[],["102","103"],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\Button.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\Text.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\Toast.tsx",["104","105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport { Title } from \"../Text\";\r\nimport \"./Toast.scss\";\r\n\r\ninterface Props {\r\n  type?: \"loading\" | \"error\" | \"success\";\r\n  message?: string;\r\n  duration?: number;\r\n  active?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const Toast: React.FC<Props> = ({\r\n  type = \"loading\",\r\n  message = \"\",\r\n  duration = 1500,\r\n  active = false,\r\n  onClose = () => {\r\n    console.log(\"hide toast\");\r\n  },\r\n  ...rest\r\n}) => {\r\n  const [id, setId] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    setId(id + 1);\r\n  }, []);\r\n\r\n  const [displayed, setDisplayed] = useState<boolean>(false);\r\n  const [timer, setTimer] = useState<number>(\r\n    window.setTimeout((_: any) => {\r\n      // function here\r\n    }, duration)\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"changed the status to : \" + active);\r\n\r\n    // cleaning any time out;\r\n    window.clearTimeout(timer);\r\n\r\n    // displaying/hidding the toast;\r\n    setDisplayed(active);\r\n\r\n    if (active) {\r\n      // hidding it after the given duration (in ms)\r\n      const aux = window.setTimeout((_: any) => {\r\n        setDisplayed(false);\r\n        onClose();\r\n      }, duration);\r\n      setTimer(aux);\r\n    }\r\n  }, [active]);\r\n\r\n  let displayedMessage = message;\r\n\r\n  if (displayedMessage == \"\") {\r\n    switch (type) {\r\n      case \"loading\":\r\n        displayedMessage = \"Loading, please wait\";\r\n        break;\r\n      case \"error\":\r\n        displayedMessage = \"An error occured\";\r\n        break;\r\n\r\n      default:\r\n        displayedMessage = \"Operation done successfuly\";\r\n        break;\r\n    }\r\n  }\r\n\r\n  const messageElement = <Title>{displayedMessage}</Title>;\r\n\r\n  return (\r\n    <div className=\"toast-wrapper\">\r\n      <div key={id} className={`toast ${type} ${displayed ? \"visible\" : \"\"}`}>\r\n        {messageElement}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Modal.tsx",["107","108"],"import { Heading } from \"../Text\";\r\nimport close from \"../../Assets/close.svg\";\r\nimport \"./Modal.scss\";\r\nimport { Button } from \"../Button\";\r\nimport { Section } from \"./Subcomponents\";\r\n\r\ninterface Props {\r\n  active: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  primaryButton?: {\r\n    title: string;\r\n    onClick?: () => void;\r\n  };\r\n  secondaryButton?: {\r\n    title: string;\r\n    type: \"normal\" | \"warning\";\r\n    onClick?: () => void;\r\n  };\r\n}\r\n\r\ninterface ModalSubComponents {\r\n  Section: typeof Section;\r\n}\r\n\r\nexport const Modal: React.FC<Props> & ModalSubComponents = ({\r\n  active,\r\n  onClose,\r\n  title = \"\",\r\n  children,\r\n  primaryButton,\r\n  secondaryButton,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`modal-wrapper ${active ? \"active\" : \"\"}`}\r\n      onClick={(_) => onClose()}\r\n    >\r\n      <div\r\n        className={`modal`}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <Heading>{title}</Heading>\r\n          <img\r\n            className=\"modal-header-close\"\r\n            src={close}\r\n            onClick={(_) => onClose()}\r\n          />\r\n        </div>\r\n        <div className=\"modal-section-wrapper\">{children}</div>\r\n        <div className=\"modal-footer\">\r\n          {secondaryButton && (\r\n            <Button\r\n              type={\r\n                secondaryButton.type == \"normal\"\r\n                  ? \"secondary\"\r\n                  : secondaryButton?.type\r\n              }\r\n              onClick={secondaryButton?.onClick}\r\n            >\r\n              {secondaryButton?.title}\r\n            </Button>\r\n          )}\r\n          {primaryButton && (\r\n            <div className=\"modal-primary-button-wrapper\">\r\n              <Button type=\"primary\" onClick={primaryButton?.onClick}>\r\n                {primaryButton?.title}\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nModal.Section = Section;\r\n","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Subcomponents\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Subcomponents\\Section.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\stories\\0-Introduction.stories.tsx",["109"],"import { Introduction } from \"./Introduction\";\r\nimport \"../App.scss\";\r\nimport \"../Styles/colors.scss\";\r\n\r\n// import \"../index.css\";\r\nexport default {\r\n  title: \"Introduction\",\r\n  component: Introduction,\r\n};\r\n\r\nexport const Intro: React.VFC<{}> = () => <Introduction />;\r\n","C:\\DevMobile\\Neo\\midight\\src\\stories\\Introduction.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\stories\\1-Button.stories.tsx",["110"],"import { Button } from \"../Components/Button\";\r\n\r\nexport default {\r\n  title: \"Button\",\r\n  component: Button,\r\n};\r\n\r\nexport const Primary: React.FC<{}> = () => (\r\n  <div\r\n    style={{\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-evenly\",\r\n      flexDirection: \"column\",\r\n    }}\r\n  >\r\n    <Button\r\n      type=\"primary\"\r\n      size=\"small\"\r\n      onClick={() => {\r\n        console.log(\"primary button\");\r\n      }}\r\n    >\r\n      small primary\r\n    </Button>\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={() => {\r\n        console.log(\"primary button\");\r\n      }}\r\n    >\r\n      medium primary\r\n    </Button>\r\n    <Button\r\n      type=\"primary\"\r\n      size=\"large\"\r\n      onClick={() => {\r\n        console.log(\"primary button\");\r\n      }}\r\n    >\r\n      Large primary\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport const Secondary: React.FC<{}> = () => (\r\n  <div\r\n    style={{\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-evenly\",\r\n      flexDirection: \"column\",\r\n    }}\r\n  >\r\n    <Button\r\n      type=\"secondary\"\r\n      size=\"small\"\r\n      onClick={() => {\r\n        console.log(\"secondary button\");\r\n      }}\r\n    >\r\n      small secondary\r\n    </Button>\r\n    <Button\r\n      type=\"secondary\"\r\n      onClick={() => {\r\n        console.log(\"secondary button\");\r\n      }}\r\n    >\r\n      medium secondary\r\n    </Button>\r\n    <Button\r\n      type=\"secondary\"\r\n      size=\"large\"\r\n      onClick={() => {\r\n        console.log(\"secondary button\");\r\n      }}\r\n    >\r\n      Large secondary\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport const Tertiary: React.FC<{}> = () => (\r\n  <div\r\n    style={{\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-evenly\",\r\n      flexDirection: \"column\",\r\n    }}\r\n  >\r\n    <Button\r\n      size=\"small\"\r\n      onClick={() => {\r\n        console.log(\"Tertiary button\");\r\n      }}\r\n    >\r\n      small tertiary\r\n    </Button>\r\n    <Button\r\n      onClick={() => {\r\n        console.log(\"Tertiary button\");\r\n      }}\r\n    >\r\n      medium tertiary\r\n    </Button>\r\n    <Button\r\n      size=\"large\"\r\n      onClick={() => {\r\n        console.log(\"Tertiary button\");\r\n      }}\r\n    >\r\n      Large tertiary\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport const Warning: React.FC<{}> = () => (\r\n  <div\r\n    style={{\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-evenly\",\r\n      flexDirection: \"column\",\r\n    }}\r\n  >\r\n    <Button\r\n      size=\"small\"\r\n      type=\"warning\"\r\n      onClick={() => {\r\n        console.log(\"Tertiary button\");\r\n      }}\r\n    >\r\n      small warning\r\n    </Button>\r\n    <Button\r\n      type=\"warning\"\r\n      onClick={() => {\r\n        console.log(\"Tertiary button\");\r\n      }}\r\n    >\r\n      medium warning\r\n    </Button>\r\n    <Button\r\n      size=\"large\"\r\n      type=\"warning\"\r\n      onClick={() => {\r\n        console.log(\"Tertiary button\");\r\n      }}\r\n    >\r\n      Large warning\r\n    </Button>\r\n  </div>\r\n);\r\n","C:\\DevMobile\\Neo\\midight\\src\\stories\\2-modal.stories.tsx",["111"],"import { useState } from \"react\";\r\nimport { Button } from \"../Components/Button\";\r\nimport { Modal } from \"../Components/Modal\";\r\n\r\n// import \"../index.css\";\r\nexport default {\r\n  title: \"Modal\",\r\n  component: Modal,\r\n};\r\n\r\nexport const Default: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"this is a title\"\r\n        active={open}\r\n        onClose={() => setOpen(!open)}\r\n      >\r\n        <Modal.Section>This is a section</Modal.Section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const WithPrimaryButton: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"this modal contains a primary button\"\r\n        active={open}\r\n        onClose={() => setOpen(!open)}\r\n        primaryButton={{\r\n          title: \"Save\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n      >\r\n        <Modal.Section>This is a section</Modal.Section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const WithSecondaryButton: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"this modal contains a secondary button\"\r\n        active={open}\r\n        onClose={() => setOpen(!open)}\r\n        secondaryButton={{\r\n          title: \"Cancel\",\r\n          type: \"normal\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n      >\r\n        <Modal.Section>This is a section</Modal.Section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const WithDangerButton: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"this modal contains a danger button\"\r\n        active={open}\r\n        onClose={() => setOpen(!open)}\r\n        secondaryButton={{\r\n          title: \"Cancel\",\r\n          type: \"warning\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n      >\r\n        <Modal.Section>This is a section</Modal.Section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SecondaryAndPrimary: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"this modal contains both a secondary and primary button\"\r\n        active={open}\r\n        onClose={() => setOpen(!open)}\r\n        secondaryButton={{\r\n          title: \"Cancel\",\r\n          type: \"warning\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n        primaryButton={{\r\n          title: \"Save\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n      >\r\n        <Modal.Section>This is a section</Modal.Section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const MultipleSections: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"this modal contains both a secondary and primary button\"\r\n        active={open}\r\n        onClose={() => setOpen(!open)}\r\n        secondaryButton={{\r\n          title: \"Cancel\",\r\n          type: \"warning\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n        primaryButton={{\r\n          title: \"Save\",\r\n          onClick: () => {\r\n            setOpen(!open);\r\n          },\r\n        }}\r\n      >\r\n        <Modal.Section>section 1 </Modal.Section>\r\n        <Modal.Section>\r\n          <div\r\n            style={{\r\n              height: \"200px\",\r\n            }}\r\n          >\r\n            section 2\r\n          </div>\r\n        </Modal.Section>\r\n        <Modal.Section>section 3</Modal.Section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","C:\\DevMobile\\Neo\\midight\\src\\stories\\3-Toast.stories.tsx",["112"],"import { useState } from \"react\";\r\nimport { Button } from \"../Components/Button\";\r\nimport { Toast } from \"../Components/Toast\";\r\n\r\nexport default {\r\n  title: \"Toast\",\r\n  component: Toast,\r\n};\r\n\r\nexport const Default: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Toast active={open} onClose={() => setOpen(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Success: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Toast active={open} type=\"success\" onClose={() => setOpen(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Error: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Toast active={open} type=\"error\" onClose={() => setOpen(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CustomMessage: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Toast\r\n        active={open}\r\n        type=\"error\"\r\n        onClose={() => setOpen(false)}\r\n        message=\"this is a custom error message\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CustomDuration: React.VFC<{}> = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button type=\"secondary\" onClick={() => setOpen(true)}>\r\n          Click me !{\" \"}\r\n        </Button>\r\n      </div>\r\n      <Toast\r\n        active={open}\r\n        type=\"success\"\r\n        onClose={() => setOpen(false)}\r\n        duration={3000}\r\n        message=\"this is a custom duration toast\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","C:\\DevMobile\\Neo\\midight\\src\\stories\\4-Badge.stories.tsx",["113"],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Badge\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Badge\\Badge.tsx",["114"],"import { Caption } from \"../Text\";\r\nimport \"./Badge.scss\";\r\n\r\ninterface Props {\r\n  progress?: \"default\" | \"incomplete\" | \"partiallyComplete\" | \"complete\";\r\n  size?: \"small\" | \"medium\";\r\n  status?:\r\n    | \"default\"\r\n    | \"success\"\r\n    | \"info\"\r\n    | \"attention\"\r\n    | \"critical\"\r\n    | \"warning\"\r\n    | \"new\";\r\n}\r\n\r\nexport const Badge: React.FC<Props> = ({\r\n  children,\r\n  progress = \"default\",\r\n  size = \"medium\",\r\n  status = \"default\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={`badge ${progress} ${size} ${status}`}>\r\n      <div className=\"progress-wrapper\"></div>\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":15},{"ruleId":"119","severity":1,"message":"123","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":24},{"ruleId":"119","severity":1,"message":"124","line":7,"column":26,"nodeType":"121","messageId":"122","endLine":7,"endColumn":36},{"ruleId":"119","severity":1,"message":"125","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":16},{"ruleId":"119","severity":1,"message":"126","line":9,"column":18,"nodeType":"121","messageId":"122","endLine":9,"endColumn":27},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":27,"column":6,"nodeType":"131","endLine":27,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":53,"column":6,"nodeType":"131","endLine":53,"endColumn":14,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":57,"column":24,"nodeType":"137","messageId":"138","endLine":57,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":48,"column":11,"nodeType":"141","endLine":52,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":59,"column":38,"nodeType":"137","messageId":"138","endLine":59,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":6,"column":1,"nodeType":"144","endLine":9,"endColumn":3},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":6,"endColumn":3},{"ruleId":"142","severity":1,"message":"143","line":6,"column":1,"nodeType":"144","endLine":9,"endColumn":3},{"ruleId":"142","severity":1,"message":"143","line":5,"column":1,"nodeType":"144","endLine":8,"endColumn":3},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":6,"endColumn":3},{"ruleId":"119","severity":1,"message":"145","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":17},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'successVisible' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.",["146"],["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. You can also do a functional update 'setId(i => ...)' if you only need 'id' in the 'setId' call.","ArrayExpression",["148"],"React Hook useEffect has missing dependencies: 'duration', 'onClose', and 'timer'. Either include them or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Caption' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [id]",{"range":"154","text":"155"},"Update the dependencies array to be: [active, duration, onClose, timer]",{"range":"156","text":"157"},[559,561],"[id]",[1204,1212],"[active, duration, onClose, timer]"]