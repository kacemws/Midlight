[{"C:\\DevMobile\\Neo\\midight\\src\\index.tsx":"1","C:\\DevMobile\\Neo\\midight\\src\\reportWebVitals.ts":"2","C:\\DevMobile\\Neo\\midight\\src\\App.tsx":"3","C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\index.ts":"4","C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\Button.tsx":"5","C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\index.ts":"6","C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\Text.tsx":"7","C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\index.ts":"8","C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\Toast.tsx":"9","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\index.ts":"10","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Modal.tsx":"11"},{"size":509,"mtime":1610915833684,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1610904671475,"results":"14","hashOfConfig":"13"},{"size":2301,"mtime":1613426987229,"results":"15","hashOfConfig":"13"},{"size":27,"mtime":1610910903921,"results":"16","hashOfConfig":"13"},{"size":539,"mtime":1613245863858,"results":"17","hashOfConfig":"13"},{"size":25,"mtime":1610956939920,"results":"18","hashOfConfig":"13"},{"size":914,"mtime":1610957557052,"results":"19","hashOfConfig":"13"},{"size":26,"mtime":1613247421356,"results":"20","hashOfConfig":"13"},{"size":1845,"mtime":1613253659819,"results":"21","hashOfConfig":"13"},{"size":26,"mtime":1613425240132,"results":"22","hashOfConfig":"13"},{"size":380,"mtime":1613426920699,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nygelh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\DevMobile\\Neo\\midight\\src\\index.tsx",[],["48","49"],"C:\\DevMobile\\Neo\\midight\\src\\reportWebVitals.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\App.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Button\\Button.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Text\\Text.tsx",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Toast\\Toast.tsx",["50","51","52"],"import React, { useEffect, useState } from \"react\";\r\nimport { Title } from \"../Text\";\r\nimport \"./Toast.scss\";\r\n\r\ninterface Props {\r\n  type?: \"loading\" | \"error\" | \"success\";\r\n  message?: string;\r\n  duration?: number;\r\n  active?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const Toast: React.FC<Props> = ({\r\n  type = \"loading\",\r\n  message = \"\",\r\n  duration = 1500,\r\n  active = false,\r\n  onClose = () => {\r\n    console.log(\"hide toast\");\r\n  },\r\n  ...rest\r\n}) => {\r\n  const [id, setId] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    setId(id + 1);\r\n  }, []);\r\n\r\n  const [displayed, setDisplayed] = useState<boolean>(false);\r\n  const [timer, setTimer] = useState<number>(\r\n    window.setTimeout((_: any) => {\r\n      // function here\r\n    }, duration)\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"changed the status to : \" + active);\r\n\r\n    // cleaning any time out;\r\n    window.clearTimeout(timer);\r\n\r\n    // displaying/hidding the toast;\r\n    setDisplayed(active);\r\n\r\n    if (active) {\r\n      // hidding it after the given duration (in ms)\r\n      const aux = window.setTimeout((_: any) => {\r\n        setDisplayed(false);\r\n        onClose();\r\n      }, duration);\r\n      setTimer(aux);\r\n    }\r\n  }, [active]);\r\n\r\n  let displayedMessage = message;\r\n\r\n  if (displayedMessage == \"\") {\r\n    switch (type) {\r\n      case \"loading\":\r\n        displayedMessage = \"Loading, please wait\";\r\n        break;\r\n      case \"error\":\r\n        displayedMessage = \"An error occured\";\r\n        break;\r\n\r\n      default:\r\n        displayedMessage = \"Operation done successfuly\";\r\n        break;\r\n    }\r\n  }\r\n\r\n  const messageElement = <Title>{displayedMessage}</Title>;\r\n\r\n  return (\r\n    <div className=\"toast-wrapper\">\r\n      <div key={id} className={`toast ${type} ${displayed ? \"visible\" : \"\"}`}>\r\n        {messageElement}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\index.ts",[],"C:\\DevMobile\\Neo\\midight\\src\\Components\\Modal\\Modal.tsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":27,"column":6,"nodeType":"59","endLine":27,"endColumn":8,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":53,"column":6,"nodeType":"59","endLine":53,"endColumn":14,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":57,"column":24,"nodeType":"65","messageId":"66","endLine":57,"endColumn":26},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. You can also do a functional update 'setId(i => ...)' if you only need 'id' in the 'setId' call.","ArrayExpression",["69"],"React Hook useEffect has missing dependencies: 'duration', 'onClose', and 'timer'. Either include them or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [id]",{"range":"75","text":"76"},"Update the dependencies array to be: [active, duration, onClose, timer]",{"range":"77","text":"78"},[559,561],"[id]",[1204,1212],"[active, duration, onClose, timer]"]